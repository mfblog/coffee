@import "tailwindcss";

/* 添加自定义暗黑模式变体，允许手动切换暗黑模式 */
@custom-variant dark (&:where(.dark, .dark *));

:root {
  --foreground: #000;
  --background: #FFF;
  --rsbs-backdrop-bg: rgba(0, 0, 0, 0.3);
  --rsbs-bg: var(--background);
  --rsbs-handle-bg: rgba(0, 0, 0, 0.14);
  --rsbs-max-w: 500px;
  --rsbs-ml: auto;
  --rsbs-mr: auto;
  --rsbs-overlay-rounded: 16px;
  --font-sans: 'Geist Sans', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  --font-mono: 'Geist Mono', ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace;
  --keyboard-height: 0px;
}

/* 当系统偏好为暗黑模式时的样式，仅当使用系统主题时生效 */
@media (prefers-color-scheme: dark) {
  :root {
    --foreground: #000;
    --background: #FFF;
    --rsbs-backdrop-bg: rgba(0, 0, 0, 0.3);
  }
}

/* 当手动设置为暗黑模式时的样式 */
.dark {
  --foreground: #fff;
  --background: #171717;
  --rsbs-backdrop-bg: rgba(0, 0, 0, 0.5);
}

@layer base {

  html,
  body,
  #root {
    height: -webkit-fill-available;
  }

  /* 确保安全区域在 iOS 和 Android 设备上正常工作 */
  .pt-safe {
    padding-top: env(safe-area-inset-top);
    padding-top: constant(safe-area-inset-top);
    /* 确保顶部状态栏有足够的高度 */
    padding-top: max(env(safe-area-inset-top), 24px);
  }

  .pb-safe {
    padding-bottom: env(safe-area-inset-bottom);
    padding-bottom: constant(safe-area-inset-bottom);
    /* 增加Android底部导航栏的最小高度 */
    padding-bottom: max(env(safe-area-inset-bottom), 24px);
  }

  .px-safe {
    padding-left: env(safe-area-inset-left);
    padding-left: constant(safe-area-inset-left);
    padding-right: env(safe-area-inset-right);
    padding-right: constant(safe-area-inset-right);
  }

  /* 针对iOS状态栏的特殊处理 */
  .ios-pt-safe {
    padding-top: env(safe-area-inset-top);
    padding-top: constant(safe-area-inset-top);
  }

  /* 针对Android状态栏的特殊处理 */
  .android-pt-safe {
    padding-top: 24px;
    /* Android状态栏的固定高度 */
  }
}

html,
body {
  color: var(--foreground);
  background: var(--background);
  height: 100%;
  overflow: hidden;
  position: fixed;
  width: 100%;
  touch-action: manipulation;
  -webkit-overflow-scrolling: touch;
  font-family: var(--font-sans);
}

/* 允许内部容器滚动 */
.overflow-y-auto {
  -webkit-overflow-scrolling: touch;
  overflow-y: auto;
  height: 100%;
}

/* 需要底部操作栏间距的滚动容器 */
.scroll-with-bottom-bar {
  -webkit-overflow-scrolling: touch;
  overflow-y: auto;
  height: 100%;
  padding-bottom: calc(max(env(safe-area-inset-bottom), 28px) + 100px);
}

/* 确保内容区域不会被底部操作栏遮挡 */
.content-area {
  padding-bottom: calc(max(env(safe-area-inset-bottom), 28px) + 100px);
  /* 增加底部内边距 */
}

/* 添加底部操作栏的固定定位样式 */
.bottom-action-bar {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 50;
  background: var(--background);
  padding-bottom: max(env(safe-area-inset-bottom), 28px);
  box-shadow: 0 -1px 0 0 var(--background);
  /* 添加顶部阴影，确保渐变效果 */
}

/* 冲煮页面滚动容器样式 */
.brew-content-scroll {
  -webkit-overflow-scrolling: touch;
  overflow-y: auto;
  height: 100%;
  padding-bottom: calc(max(env(safe-area-inset-bottom), 28px) + 100px);
}

/* 自定义表单滚动容器样式 */
.custom-form-scroll {
  -webkit-overflow-scrolling: touch;
  overflow-y: auto;
  height: 100%;
  padding-bottom: 0 !important;
}

/* 可视化方案滚动容器样式 */
.visualization-scroll {
  -webkit-overflow-scrolling: touch;
  overflow-y: auto;
  height: 100%;
  padding-bottom: 0 !important;
}

/* 键盘相关样式 */
.keyboard-is-open {
  /* 当键盘打开时应用的样式 */
  padding-bottom: var(--keyboard-height);
}

/* iOS 键盘打开时，确保内容不会被键盘遮挡 */
.keyboard-is-open .overflow-y-auto,
.keyboard-is-open .scroll-with-bottom-bar,
.keyboard-is-open .brew-content-scroll,
.keyboard-is-open .custom-form-scroll,
.keyboard-is-open .visualization-scroll {
  padding-bottom: calc(var(--keyboard-height) + 20px);
  margin-bottom: var(--keyboard-height);
}

/* 输入框获取焦点时的样式 */
input:focus, textarea:focus, [contenteditable]:focus {
  position: relative;
  z-index: 10;
}

.input-with-keyboard-adjustment {
  transition: padding-bottom 0.25s ease;
}

.keyboard-is-open .input-with-keyboard-adjustment {
  padding-bottom: var(--keyboard-height);
}

/* 确保iOS中固定定位元素不受键盘影响 */
.ios-fixed-bottom {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 50;
}

.keyboard-is-open .ios-fixed-bottom {
  bottom: var(--keyboard-height);
  transition: bottom 0.25s ease;
}

/* 防止 iOS 上键盘弹出时页面抖动 */
html, body {
  height: 100%;
  overflow: hidden;
  position: fixed;
  width: 100%;
  -webkit-overflow-scrolling: touch;
}

/* 当键盘显示时，防止 iOS 上的滚动容器被推上去 */
@supports (-webkit-touch-callout: none) {
  .keyboard-is-open .bottom-action-bar {
    transform: translateY(calc(-1 * var(--keyboard-height)));
    transition: transform 0.25s ease;
  }
}